#!/bin/bash
#
#       VcfToPathOS         Load a set of VCF files
#
#       01      Ken Doig    31-Aug-15   Add VCF files to PathOS
#
#vim:ts=4:et:sw=4

##set -x

#
#   process -options
#
HELP=0
bg=''
rdb=pa_stage
queue=pathology
seqrun=NoRun
panel=NoPanel

while getopts p:r:q:s:bh\? opt                    # Add additional options here
do  case "$opt" in
    b)      bg='-b';;
    p)      panel="$OPTARG";;
    r)      rdb="$OPTARG";;
    q)      queue="$OPTARG";;
    s)      seqrun="$OPTARG";;
    h)      HELP=1;;
    [?])    HELP=1;;
    esac
done
shift `expr $OPTIND - 1`

#
#   output usage if required
#
if [ $# -lt 1 -o $HELP -eq 1 ]; then    # Set number of required arguments here
    echo "
    Usage: `basename $0` [options] in.vcf ...

    Options:
            -b          Run in background and on cluster
            -s <seqrun> Seqrun to use [NoRun]
            -r <dbname> DB schema for cacheing and loading [pa_stage]
            -q <queue>  Cluster queue to use [pathology]
            -p <panel>  Panel manifest to use [NoPanel]

    Load VCFs into PathOS
    " 1>&2

    exit 1
fi

#
#   Start of script
#
rm -fv  sam*.tmp
samfile=sam$$.tmp
pipe=mp_vcfAmplicon

#
#   Output header
#
echo -e "##\tGenerated by $0" > $samfile
echo -e "##" >> $samfile
echo -e "#seqrun\tsample\tpanel\tpipeline\tpipein\toutdir" >> $samfile

for vcf in $*
do
    sample=`basename $vcf .vcf`
    vcfpath=`readlink -f $vcf`
    echo -e "$seqrun\t$sample\t$panel\t$pipe\t$vcfpath\t/pathology/NGS/Samples/Testing/$seqrun/$sample" >> $samfile
done

#
#   Run pipeline
#
cmd="RunPipe $bg -s $seqrun -q $queue -r $rdb -p $pipe $samfile"
echo INFO: Running: $cmd
$cmd