#!/bin/bash
#
#		RunCanary.sh		Run Canary Variant Caller
#
#		01		kdoig		28-May-15
#       02      kdoig       22-Jul-15   Fixed path bug and added -o flag
#       03      kdoig       20-Feb-16   Added -b and -c flags
#
#		Usage: RunCanary.sh panel seqrun sample
#
#vim:ts=4

#
#	process -options
#
HELP=0
DBG=""
PCT=100
OUT="--output canary.tsv --vcf canary.vcf"
IGVH=""
FILT=""
FAST=""
MINP=10
VAF=3
COMPLEX=""
BAM=""

while getopts b:cf:a:m:v:io:p:dh\? opt			# Add additional options here
do	case "$opt" in
	p)		PCT="$OPTARG";;
	v)		VAF="$OPTARG";;
	m)		MINP="$OPTARG";;
	o)		OUT="--output ${OPTARG}.tsv --vcf ${OPTARG}.vcf";;
	d)		DBG="-d";;
	c)		COMPLEX="--complex";;
	a)		FILT="--filter ${OPTARG}";;
	f)		FAST="--fastq ${OPTARG}";;
	b)		BAM="--bam ${OPTARG}.bam";;
	i)		IGVH="--igvh";;
	h)		HELP=1;;
	[?])	HELP=1;;
	esac
done
shift `expr $OPTIND - 1`

#
#	output usage if required
#
if [ $# -ne 3 -o $HELP -eq 1 ]; then	# Set number of required arguments here
	echo "
	Usage: `basename $0` [options] panel seqrun sample

	Option:	-p percent     	    Approximate percent of file to process
	        -o outprefix        Prefix for .tsv and .vcf files
	        -v vafpct           Minimum VAF % [3]
	        -m minpair          Minimum no of read pairs to call variants [10]
	        -a amplist          List of amplicons to filter by
	        -b bamfile          Create a BAM file
	        -f prefix           Create FASTQ files
	        -c                  Call complex indels
	        -d                  Turn on debug for alignments
	        -i                  Turn on IgVH mode

	Align amplicon reads using PM aligner
	" 1>&2 

	exit 1
fi

panel=$1
seqrun=$2
sample=$3

#
#	Check for reads
#
readpath="/pipeline/Archives/*Seq*/$seqrun/ProjectFolders/Project*/Sample_$sample /pipeline/Runs/*Seq*/$seqrun/ProjectFolders/Project*/Sample_$sample"
readdir=`ls -1d $readpath`
if [ "X$readdir" != "X" ]; then
if [ ! -d "$readdir" ]; then
	echo "ERROR: no read directory found"
	exit 1
fi
else
    echo "ERROR: no read directory found"
    exit 1
fi

#
#	Check for panel
#
panel=/pipeline/Runs/MiSeq/Indexes/$panel.fasta
if [ ! -s $panel ]; then
	echo "ERROR: Panel doesn't exist $panel"
	exit 1
fi

#
#	Run Canary 
#

Canary	--amplicon $panel \
		--primers  $panel.primers \
		$OUT \
		$DBG \
		$COMPLEX \
		$BAM \
		$IGVH \
		$FILT \
		$FAST \
		--reads $PCT \
		--vaf $VAF \
		--minpair $MINP \
		$readdir/*R1* $readdir/*R2*
