version: '3'

services:
    # The MariaDB (Mysql) database
    #
    # The actual database data storage is mounted from 
    # the data-only container pathos-mariadb-data.
    #
    # The SQL script mounted in the init.d directory
    # ensures that the dblive database is present and
    # that the 'bioinformatics' user is created and has
    # appropriate access rights.
    #
    # Note that because the database sits on the docker
    # private network, passwords are not a huge issue.
    #
    pathos-mariadb:
        image: mariadb:10
        environment:
            - MYSQL_ROOT_PASSWORD=pathos
        volumes:
            - pathos-mariadb-data:/var/lib/mysql
            - ${PWD}/pathos-mariadb/01-initdb.sql:/docker-entrypoint-initdb.d/01-initdb.sql

    # Tomcat (7) server
    #
    # The main PathOS tomcat server is in this container.
    # Following the separation-of-concerns principle of docker,
    # all the other entities are housed in other containers.
    #
    # The server loads the PathOS.war file and uses a fixed pathos.properties file.
    #
    pathos-tomcat:
        build: ./pathos-tomcat/
        depends_on:
            - pathos-mariadb
        links:
            - pathos-mariadb

    # PathOS commandline tools
    #
    # This container uses the same pathos.properties file as the tomcat server,
    # and provides the various command-line tools.
    #
    # NB - this is the least tested aspect of the system.
    #
    pathos-tools:
        build: ./pathos-tools/
        depends_on:
            - pathos-mariadb
        links:
            - pathos-mariadb

    # HTTPD for serving bam/vcf files.
    #
    # This server assumes the presence of a directory
    # hierarchy under /pathology containing the BAM/VCF
    # files (etc) used by IGV.
    #
    pathos-httpd:
        image: httpd
        volumes:
            - ${PWD}/pathos-httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf
            - ${PATHOS_DATA}:/pathology

    # Front end proxy
    #
    # This front-end proxy server allows the tomcat and httpd servers
    # to be accessed from a single unified access point.
    #
    # It is configured so that all URLs starting with /PathOS are directed
    # to the tomcat server and all others to the httpd.
    #
    # It also serves both HTTP and HTTPS.
    # If it is desired thsat only one or the other is used, one of the two
    # ports exposed below can be commented out (80:80 exposes HTTP, and
    # 443:443 exposes HTTPS).
    #
    # If HTTPS is being used, the default self-signed certificate can be
    # overridden either by setting the PATHOS_CERT in the environment when
    # docker-compose is invoked, or by editing the .env file which contains
    # a default value.
    #
    pathos-front:
        image: haproxy:alpine
        depends_on:
            - pathos-tomcat
            - pathos-httpd
        volumes:
            - ${PWD}/pathos-front/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
            - ${PATHOS_CERT}:/etc/ssl/private/cert.pem
        ports:
            - 80:80
            - 443:443

volumes:
    # This is the data-only container used to store the database files.
    pathos-mariadb-data:
